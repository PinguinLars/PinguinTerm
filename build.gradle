//file:noinspection SpellCheckingInspection
plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.1.1'
    id 'org.jetbrains.kotlin.jvm'
}

group 'nl.pinguinlars'
version '0.1'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.12.2'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', 'src/main/kotlin'] // Add Kotlin source directory
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'nl.pinguinlars.pinguinterm'
    mainClass = 'nl.pinguinlars.pinguinterm.Main'
}

javafx {
    version = '21'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    implementation('com.fazecast:jSerialComm:2.11.0')
    implementation('org.controlsfx:controlsfx:11.2.2')
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}
jar {
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}
kotlin {
    jvmToolchain(21)
}